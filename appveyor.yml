# version format
version: 1.0.{build}

# branches to build
#branches:
#  # whitelist
#  only:
#    - master
    
# Build worker image (VM template)
image: Visual Studio 2017

# RDP user is DAIAD\appveyor
# password in project settings
# more rdp info https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
#environment:
#  APPVEYOR_RDP_PASSWORD: <password_here>

# install csp
install:
  - cmd: cspTools\CSPSetup.exe -silent -lang eng -noreboot -nodlg -args "PIDKEY=5050E-H3010-06DCZ-EGXF5-FFUXC /quiet"
  - ps: Start-Sleep -s 60
  - cmd: regedit.exe /S cspTools\disableWarnings.reg
  - ps: Restart-Computer -Force
  - ps: Start-Sleep -s 10
  - ps: New-Item -ItemType Directory -Force -Path "$env:LOCALAPPDATA\Crypto Pro"
  - ps: Copy-Item -Force -Recurse ".\cspTools\G2001256.000" -Destination "$env:LOCALAPPDATA\Crypto Pro\"
  - ps: Copy-Item -Force -Recurse ".\cspTools\G2012256.001" -Destination "$env:LOCALAPPDATA\Crypto Pro\"
  - ps: Copy-Item -Force -Recurse ".\cspTools\G2012512.000" -Destination "$env:LOCALAPPDATA\Crypto Pro\"
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -absorb -certs -provtype 75 -provider "Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider" -pattern "G2001256.000"'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -absorb -certs -provtype 80 -pattern "G2012256"'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -absorb -certs -provtype 81 -pattern "G2012512"'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -keyset -enum_c -verifyc -uniq'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -keyset -enum_c -verifyc -fqcn'
  - cmd: '"C:\Program Files\Crypto Pro\CSP\csptest" -enum -info -type PP_ENUMALGS'
  # enable-rdp
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# build script logic
build_script: 
  - build.cmd -clean
  - build.cmd  

# disable automatic test discovery, xUnit already runs as part of build.cmd
test: off
  
# runnng specified tests  
test_script:
  - .dotnet\dotnet --info
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Csp\tests\ /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3411.Tests.Gost3411CryptoServiceProviderTests" /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Algorithms\tests\ /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.Gost3411Tests"  /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Algorithms\tests\ /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.Gost3411_2012_256Tests"  /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Algorithms\tests\ /t:BuildAndTest  "/p:XunitOptions=-class System.Security.Cryptography.Hashing.Algorithms.Tests.Gost3411_2012_512Tests"  /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Csp\tests\ /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3410.Tests.Gost3410CryptoServiceProviderTests" /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Csp\tests\ /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3410.Tests.Gost3410_2012_256CryptoServiceProviderTests" /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Csp\tests\ /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Encryption.Gost3410.Tests.Gost3410_2012_512CryptoServiceProviderTests" /p:ForceRunTests=true
  - .dotnet\dotnet msbuild src\System.Security.Cryptography.Csp\tests\ /t:BuildAndTest "/p:XunitOptions=-class System.Security.Cryptography.Csp.Tests.Gost28147CryptoServiceProviderTest" /p:ForceRunTests=true
  - .dotnet\dotnet msbuild /t:BuildAndTest src\Common\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Algorithms\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Primitives\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Csp\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.X509Certificates\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Pkcs\tests\
#  - .dotnet\dotnet msbuild /t:BuildAndTest src\System.Security.Cryptography.Xml\tests\
 
# artifacts on succesfull build 
artifacts:
  - path: artifacts\packages\**\*.nupkg
  #  name: packages
  #- path: artifacts\packages
    name: packages
  #  type: zip
    type: NuGetPackage 
  - path: artifacts\bin\runtime\netcoreapp-Windows_NT-Debug-x64
    name: runtime
    type: zip
 
# deploy result
deploy:
  release: $(APPVEYOR_REPO_TAG_NAME)
  tag: $(APPVEYOR_REPO_TAG_NAME)
  description: $(APPVEYOR_REPO_COMMIT_MESSAGE)
  provider: GitHub
  auth_token:
    secure: 8tOMOmXZegbWNKbYUtypH+LVj6bj5dYWXbnSPWwWNqZldVnuY+lQQv1r2oFeBMMU # your encrypted token from GitHub
  artifact: packages
  draft: true
  prerelease: true
  on:
    #branch: 
    #  - master                 # release from master branch only
    #  - Fasjeit-auto-build
    appveyor_repo_tag: true        # deploy only on tag push
    
on_finish:
# uncomment line below to make VM wait untill RdpConnection
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # pushing all *.nupkg files in build directory recursively
#- ps: Get-ChildItem "artifacts\packages\**\*.nupkg" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
#- ps: Get-ChildItem "artifacts\packages\**\symbols\*.nupkg" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
